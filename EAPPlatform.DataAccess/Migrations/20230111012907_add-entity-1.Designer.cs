// <auto-generated />
using System;
using EAPPlatform.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace EAPPlatform.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230111012907_add-entity-1")]
    partial class addentity1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 30);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EAPPlatform.Model.CustomVMs.V_EquipmentStatus", b =>
                {
                    b.Property<string>("EQID")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EQID");

                    b.Property<decimal>("Mtba")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("MTBA");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<decimal>("RunRate")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("RUNRATE");

                    b.Property<string>("Status")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Type")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TYPE");

                    b.ToView("V_EQUIPMENTSTATUS");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.ClientLog", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATETIME");

                    b.Property<string>("EQID")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EQID");

                    b.Property<string>("LogContent")
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOGCONTENT");

                    b.Property<string>("LogLevel")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("LOGLEVEL");

                    b.Property<string>("LogType")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("LOGTYPE");

                    b.HasKey("ID");

                    b.ToTable("CLIENTLOG");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.Equipment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("EQID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<Guid?>("EquipmentTypeId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("EQUIPMENTTYPEID");

                    b.Property<bool>("IsValid")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISVALID");

                    b.Property<string>("Line")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LINE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NAME");

                    b.Property<string>("PD")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PD");

                    b.Property<string>("Site")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SITE");

                    b.Property<int>("Sort")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SORT");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("ID");

                    b.HasIndex("EquipmentTypeId");

                    b.ToTable("EQUIPMENT");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentAlarm", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("AlarmCode")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("ALARMCODE");

                    b.Property<string>("AlarmEqp")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EQID");

                    b.Property<bool>("AlarmSet")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ALARMSET");

                    b.Property<string>("AlarmSource")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("ALARMSOURCE");

                    b.Property<string>("AlarmText")
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR2(1000)")
                        .HasColumnName("ALARMTEXT");

                    b.Property<DateTime?>("AlarmTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ALARMTIME");

                    b.HasKey("ID");

                    b.ToTable("EQUIPMENTALARM");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentConfiguration", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConfigurationItem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CONFIGURATIONITEM");

                    b.Property<string>("ConfigurationName")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)")
                        .HasColumnName("CONFIGURATIONNAME");

                    b.Property<string>("ConfigurationValue")
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CONFIGURATIONVALUE");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("EQIDId")
                        .IsRequired()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("EQIDID");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISREADONLY");

                    b.Property<bool>("IsValid")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISVALID");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("ID");

                    b.HasIndex("EQIDId");

                    b.ToTable("EQUIPMENTCONFIGURATION");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentMTBA", b =>
                {
                    b.Property<string>("EQID")
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("EQID");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CHECKTIME");

                    b.Property<double>("MTBAValue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MTBAVALUE");

                    b.HasKey("EQID");

                    b.ToTable("MTBARESULT");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentMTBAHistory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CHECKTIME");

                    b.Property<DateTime>("DataTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATATIME");

                    b.Property<string>("EQID")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EQID");

                    b.Property<double>("MTBAValue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MTBAVALUE");

                    b.Property<string>("Shift")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SHIFT");

                    b.HasKey("ID");

                    b.ToTable("HISTORYMTBARESULT");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentParamsHistoryCalculate", b =>
                {
                    b.Property<string>("EQID")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EQID");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<string>("Remark")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("REMARK");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATETIME");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("VALUE");

                    b.ToTable("EQUIPMENTPARAMSHISCAL", (string)null);
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentParamsHistoryRaw", b =>
                {
                    b.Property<string>("EQID")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EQID");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATETIME");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("VALUE");

                    b.ToTable("EQUIPMENTPARAMSHISRAW");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentParamsRealtime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("EQID")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EQID");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<string>("SVID")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SVID");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATETIME");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("VALUE");

                    b.HasKey("ID");

                    b.ToTable("EQUIPMENTPARAMSREALTIME");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentRealtimeStatus", b =>
                {
                    b.Property<string>("EQID")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EQID");

                    b.Property<string>("STATUS")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("UPDATETIME")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATETIME");

                    b.HasKey("EQID");

                    b.ToTable("EQUIPMENTREALTIMESTATUS");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentRunrate", b =>
                {
                    b.Property<string>("EQID")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EQID");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CHECKTIME");

                    b.Property<double>("RunrateValue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("RUNRATEVALUE");

                    b.HasKey("EQID");

                    b.ToTable("RUNRATERESULT");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentRunrateHistory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CHECKTIME");

                    b.Property<DateTime>("DataTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATATIME");

                    b.Property<string>("EQID")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EQID");

                    b.Property<double>("RunrateValue")
                        .HasColumnType("NUMBER")
                        .HasColumnName("RUNRATEVALUE");

                    b.Property<string>("Shift")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SHIFT");

                    b.HasKey("ID");

                    b.ToTable("HISTORYRUNRATERESULT");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentStatus", b =>
                {
                    b.Property<DateTime>("DATETIME")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATETIME");

                    b.Property<string>("EQID")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EQID");

                    b.Property<string>("EQTYPE")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EQTYPE");

                    b.Property<string>("STATUS")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("STATUS");

                    b.ToTable("EQUIPMENTSTATUS");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISVALID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NAME");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("ID");

                    b.ToTable("EQUIPMENTTYPE");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentTypeConfiguration", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConfigurationItem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CONFIGURATIONITEM");

                    b.Property<string>("ConfigurationName")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)")
                        .HasColumnName("CONFIGURATIONNAME");

                    b.Property<string>("ConfigurationValue")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)")
                        .HasColumnName("CONFIGURATIONVALUE");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("NUMBER(10)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISVALID");

                    b.Property<Guid?>("TypeNameId")
                        .IsRequired()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TYPENAMEID");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("ID");

                    b.HasIndex("TypeNameId");

                    b.ToTable("EQUIPMENTTYPECONFIGURATION");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentTypeRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("EquipmentTypeId")
                        .IsRequired()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("EQUIPMENTTYPEID");

                    b.Property<Guid?>("FrameworkRoleId")
                        .IsRequired()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("FRAMEWORKROLEID");

                    b.HasKey("ID");

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("FrameworkRoleId");

                    b.ToTable("EQUIPMENTTYPEROLE");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.TestModel", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Name1")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("ID");

                    b.ToTable("TestModel");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.ActionLog", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ActionName")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<DateTime>("ActionTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("ActionUrl")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR2(250)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double>("Duration")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("IP")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("ITCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("LogType")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<string>("Remark")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("ID");

                    b.ToTable("ActionLogs");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.DataPrivilege", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Domain")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("GroupCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RelateId")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("UserCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.ToTable("DataPrivileges");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FileAttachment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ExtraInfo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<byte[]>("FileData")
                        .HasColumnType("RAW(2000)");

                    b.Property<string>("FileExt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("HandlerInfo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<long>("Length")
                        .HasColumnType("NUMBER(19)");

                    b.Property<string>("Path")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("SaveMode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("ID");

                    b.ToTable("FileAttachments");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("GroupRemark")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TenantCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("ID");

                    b.ToTable("FrameworkGroups");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkMenu", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ActionName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClassName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Domain")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("FolderOnly")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<bool>("IsInherit")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool?>("IsInside")
                        .IsRequired()
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("MethodName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ModuleName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("RAW(16)");

                    b.Property<bool>("ShowOnMenu")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Url")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.HasIndex("ParentId");

                    b.ToTable("FrameworkMenus");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("RoleRemark")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TenantCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("ID");

                    b.ToTable("FrameworkRoles");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)");

                    b.Property<string>("CellPhone")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("ITCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("NVARCHAR2(32)");

                    b.Property<Guid?>("PhotoId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("TenantCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.HasIndex("PhotoId");

                    b.ToTable("FrameworkUsers");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkUserGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.ToTable("FrameworkUserGroups");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkUserRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.ToTable("FrameworkUserRoles");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FunctionPrivilege", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<bool?>("Allowed")
                        .IsRequired()
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("RoleCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("ID");

                    b.HasIndex("MenuItemId");

                    b.ToTable("FunctionPrivileges");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.PersistedGrant", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("UserCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.Equipment", b =>
                {
                    b.HasOne("EAPPlatform.Model.EAP.EquipmentType", "EquipmentType")
                        .WithMany("Equipment_EquipmentType")
                        .HasForeignKey("EquipmentTypeId");

                    b.Navigation("EquipmentType");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentConfiguration", b =>
                {
                    b.HasOne("EAPPlatform.Model.EAP.Equipment", "EQID")
                        .WithMany("EquipmentConfiguration_EQID")
                        .HasForeignKey("EQIDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EQID");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentTypeConfiguration", b =>
                {
                    b.HasOne("EAPPlatform.Model.EAP.EquipmentType", "TypeName")
                        .WithMany("EquipmentTypeConfiguration_TypeName")
                        .HasForeignKey("TypeNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeName");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentTypeRole", b =>
                {
                    b.HasOne("EAPPlatform.Model.EAP.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WalkingTec.Mvvm.Core.FrameworkRole", "FrameworkRole")
                        .WithMany()
                        .HasForeignKey("FrameworkRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");

                    b.Navigation("FrameworkRole");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkMenu", b =>
                {
                    b.HasOne("WalkingTec.Mvvm.Core.FrameworkMenu", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkUser", b =>
                {
                    b.HasOne("WalkingTec.Mvvm.Core.FileAttachment", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FunctionPrivilege", b =>
                {
                    b.HasOne("WalkingTec.Mvvm.Core.FrameworkMenu", "MenuItem")
                        .WithMany("Privileges")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.Equipment", b =>
                {
                    b.Navigation("EquipmentConfiguration_EQID");
                });

            modelBuilder.Entity("EAPPlatform.Model.EAP.EquipmentType", b =>
                {
                    b.Navigation("EquipmentTypeConfiguration_TypeName");

                    b.Navigation("Equipment_EquipmentType");
                });

            modelBuilder.Entity("WalkingTec.Mvvm.Core.FrameworkMenu", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Privileges");
                });
#pragma warning restore 612, 618
        }
    }
}
